import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./Statusbar.scss";
import { getOrders, getUserData } from "../../apis/getAPIs";
import { mockOrders } from "../../apis/mock-data";

const StatusBar = () => {
  const [user, setUser] = useState(null);
  const [activeTab, setActiveTab] = useState("T·∫•t c·∫£");
  const [currentOrders, setCurrentOrders] = useState(mockOrders);
  const [orders, setOrders] = useState({
    "T·∫•t c·∫£": [],
    "Ch·ªù thanh to√°n": [],
    "V·∫≠n chuy·ªÉn": [],
    "Ho√†n th√†nh": [],
    "ƒê√£ hu·ª∑": [],
  });
  const navigate = useNavigate();

  const tabs = [
    { name: "T·∫•t c·∫£", path: "/all" },
    { name: "Ch·ªù thanh to√°n", path: "/waitpay" },
    { name: "V·∫≠n chuy·ªÉn", path: "/transfer" },
    { name: "Ho√†n th√†nh", path: "/completed" },
    { name: "ƒê√£ hu·ª∑", path: "/canceled" },
  ];

  // useEffect(() => {
  //   setCurrentOrders(orders[activeTab]);
  // }, [activeTab, orders]);

  // useEffect(() => {
  //   const fetchUser = async () => {
  //     try {
  //       const data = await getUserData();
  //       setUser(data);
  //     } catch (error) {
  //       console.error("Error fetching user:", error);
  //     }
  //   };

  //   fetchUser();
  // }, []);

  // useEffect(() => {
  //   const fetchOrders = async () => {
  //     try {
  //       const response = await getOrders(user?.id);

  //       const categorizedOrders = {
  //         "T·∫•t c·∫£": response,
  //         "Ch·ªù thanh to√°n": [],
  //         "V·∫≠n chuy·ªÉn": [],
  //         "Ho√†n th√†nh": [],
  //         "ƒê√£ hu·ª∑": [],
  //       };

  //       response.forEach((order) => {
  //         switch (order.status) {
  //           case "Pending":
  //             categorizedOrders["Ch·ªù thanh to√°n"].push(order);
  //             break;
  //           case "Accepted":
  //             categorizedOrders["V·∫≠n chuy·ªÉn"].push(order);
  //             break;
  //           case "Delivered":
  //             categorizedOrders["Ho√†n th√†nh"].push(order);
  //             break;
  //           case "Canceled":
  //             categorizedOrders["ƒê√£ hu·ª∑"].push(order);
  //             break;
  //           default:
  //             break;
  //         }
  //       });

  //       setOrders(categorizedOrders);
  //     } catch (error) {
  //       console.error("Error fetching orders:", error);
  //     }
  //   };

  //   fetchOrders();
  // }, [user?.id]);

  const handleTabClick = async (tab) => {
    setActiveTab(tab.name);
    setCurrentOrders(orders[tab.name]);
    navigate(tab.path);
  };

  return (
    <div className="status-bar">
      <div className="user-profile">
        <img src="profile-placeholder.png" alt="Profile" />
        <p>{user?.name}</p>
        <button>S·ª≠a H·ªì S∆°</button>
      </div>

      {/* Th√™m vai tr√≤ tablist */}
      <div className="tabs" role="tablist" aria-label="Order Status Tabs">
        {tabs.map((tab) => (
          <div
            key={tab.name}
            role="tab"
            tabIndex={0}
            aria-selected={activeTab === tab.name}
            className={`tab ${activeTab === tab.name ? "active" : ""}`}
            onClick={() => handleTabClick(tab)}
            onKeyDown={(e) => e.key === "Enter" && handleTabClick(tab)}
          >
            {tab.name}
          </div>
        ))}
      </div>

      <input
        type="text"
        placeholder="B·∫°n c√≥ th·ªÉ t√¨m ki·∫øm theo t√™n Shop, ID ƒë∆°n h√†ng ho·∫∑c T√™n S·∫£n ph·∫©m"
        className="search-bar"
      />

      {/* Vai tr√≤ tabpanel ƒë·ªÉ ch·ª©a n·ªôi dung t∆∞∆°ng ·ª©ng v·ªõi tab */}
      <div className="order-container">
        <div className="order-header">
          <div className="order-header-item">H√¨nh ·∫£nh</div>
          <div className="order-header-item">T√™n s·∫£n ph·∫©m</div>
          <div className="order-header-item">S·ªë l∆∞·ª£ng</div>
          <div className="order-header-item">Gi√° t·ªïng c·ªông (VNƒê)</div>
          <div className="order-header-item">Tr·∫°ng th√°i</div>
        </div>
        <div className="order-list" role="tabpanel" aria-labelledby={activeTab}>
          {currentOrders.length > 0 ? (
            <table>
              <tbody>
                {currentOrders.map((order) => (
                  <tr key={order.order_id}>
                    <td>
                      <img
                        src={order.image}
                        alt={order.name}
                        style={{
                          width: "50px",
                          height: "50px",
                          objectFit: "cover",
                        }}
                      />
                    </td>
                    <td>{order.name}</td>
                    <td>{order.quantity}</td>
                    <td>{order.total_price?.toLocaleString("vi-VN")}</td>
                    <td>{order.status}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          ) : (
            <div className="no-orders"> üßæ CH∆ØA C√ì ƒê∆†N H√ÄNG </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default StatusBar;
